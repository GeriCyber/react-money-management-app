{"version":3,"sources":["helpers/helper.jsx","components/BudgetControl.jsx","components/Error.jsx","components/BudgetForm.jsx","components/Form.jsx","components/Expense.jsx","components/List.jsx","components/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["checkBudget","budget","residuary","BudgetControl","className","Error","message","BudgetForm","setBudget","saveResiduary","updateBudgetForm","useState","quantity","saveQuantity","error","setError","onSubmit","event","preventDefault","isNaN","type","placeholder","onChange","Number","target","value","Form","setExpense","saveCreateExpense","expenseName","saveExpense","length","expense","id","shortid","generate","Expense","List","expenses","map","Footer","rel","href","App","displayBudgetForm","setExpenses","createExpense","useEffect","budgetResiduary","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7f46c0c.chunk.js","sourcesContent":["export const checkBudget = (budget, residuary) => {\r\n    if ((budget / 4) > residuary) {\r\n        return 'alert alert-danger';\r\n    }\r\n\r\n    if ((budget / 2) > residuary) {\r\n        return 'alert alert-warning';\r\n    } \r\n    \r\n    return 'alert alert-success';\r\n}","import React, {Fragment} from 'react';\r\nimport {checkBudget} from '../helpers/helper';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BudgetControl = ({budget, residuary}) => (\r\n    <Fragment>\r\n        <div className=\"alert alert-primary\">\r\n            <span className=\"strong\">Budget: </span>{budget} $\r\n        </div>\r\n        <div className={checkBudget(budget, residuary)}>\r\n            <span className=\"strong\">Residuary: </span>{residuary} $\r\n        </div>\r\n    </Fragment>\r\n);\r\n\r\nBudgetControl.propTypes = {\r\n    budget: PropTypes.number.isRequired,\r\n    residuary: PropTypes.number.isRequired,\r\n}\r\n \r\nexport default BudgetControl;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Error = ({message}) => (\r\n    <p className=\"alert alert-danger error\">\r\n        {message}\r\n    </p>\r\n);\r\n \r\nError.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Error;","import React, {Fragment, useState} from 'react';\r\nimport Error from './Error';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BudgetForm = ({setBudget, saveResiduary, updateBudgetForm}) => {\r\n\r\n    // Set quantity state\r\n    const [quantity, saveQuantity] = useState(0);\r\n\r\n    // Error state\r\n    const [error, setError] = useState(false);\r\n\r\n    // On input changes update quantity state\r\n    const setQuantity = event => {\r\n        saveQuantity(Number(event.target.value));\r\n    }\r\n\r\n    // Submit budget quantity\r\n    const addQuantity = event => {\r\n        event.preventDefault();\r\n        \r\n        //Validate data\r\n        if(quantity < 1 || isNaN(quantity)) {\r\n            setError(true);\r\n            return;\r\n        }\r\n        setError(false);\r\n        setBudget(quantity);\r\n        saveResiduary(quantity);\r\n        updateBudgetForm(false);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2 className=\"semi-strong\">Set your budget</h2>\r\n            <form onSubmit={addQuantity}>\r\n                <input type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Add your montly budget quantity\"\r\n                    onChange={setQuantity}\r\n                />\r\n\r\n                {\r\n                    error ? \r\n                    <Error message=\"Invalid budget quantity\" />\r\n                    :\r\n                    null\r\n                }\r\n\r\n                <input type=\"submit\"\r\n                    className=\"button-primary u-full-width\"\r\n                    value=\"Save budget\"\r\n                />\r\n            </form>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nBudgetForm.propTypes = {\r\n    setBudget: PropTypes.func.isRequired,\r\n    saveResiduary: PropTypes.func.isRequired,\r\n    updateBudgetForm: PropTypes.func.isRequired,\r\n}\r\n \r\nexport default BudgetForm;","import React, {useState} from 'react';\r\nimport shortid from 'shortid';\r\nimport Error from './Error'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Form = ({setExpense, saveCreateExpense}) => {\r\n\r\n    // Create states\r\n    const [expenseName, saveExpense] = useState('');\r\n    const [quantity, saveQuantity] = useState(0);\r\n    const [error, setError] = useState(false);\r\n\r\n    const addExpense = event => {\r\n        event.preventDefault();\r\n\r\n        // Validate data\r\n        if (quantity < 1 || isNaN(quantity) || expenseName.length === 0) {\r\n            setError(true);\r\n            return;\r\n        }\r\n        setError(false);\r\n\r\n        const expense = {\r\n            expense: expenseName,\r\n            quantity,\r\n            id: shortid.generate(),\r\n        }\r\n        \r\n        // Pass expense\r\n        setExpense(expense);\r\n        saveCreateExpense(true);\r\n\r\n        //Reset form\r\n        saveExpense('');\r\n        saveQuantity(0);\r\n    }\r\n\r\n    return ( \r\n        <form onSubmit={addExpense} \r\n             className=\"w-100\"\r\n        >\r\n            <h2 className=\"semi-strong\">Add your expenses here</h2>\r\n            <div className=\"field\">\r\n                <label>Expense</label>\r\n                <input  type=\"text\"\r\n                        className=\"u-full-width\"\r\n                        placeholder=\"Ex: food, internet subscription\"\r\n                        value={expenseName}\r\n                        onChange={event => saveExpense(event.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"field\">\r\n                <label>Expense quantity</label>\r\n                <input  type=\"number\"\r\n                        className=\"u-full-width\"\r\n                        placeholder=\"Ex: 100\"\r\n                        value={quantity}\r\n                        onChange={event => saveQuantity(Number(event.target.value))}\r\n                />\r\n            </div>\r\n            {\r\n                error ? <Error message={'All fields are required'} />\r\n                : null\r\n            }\r\n            <input type=\"submit\"\r\n                className=\"button-primary u-full-width\"\r\n                value=\"Add expense\"\r\n            />\r\n        </form>\r\n     );\r\n}\r\n\r\nForm.propTypes = {\r\n    setExpense: PropTypes.func.isRequired,\r\n    saveCreateExpense: PropTypes.func.isRequired,\r\n}\r\n \r\nexport default Form;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Expense = ({expense}) => (  \r\n    <li>\r\n        <p>\r\n            <span className=\"strong\">{expense.expense}</span>\r\n            <span className=\"expense\">\r\n                $ {expense.quantity}\r\n            </span>\r\n        </p>\r\n    </li>\r\n);\r\n\r\nExpense.propTypes = {\r\n    expense: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Expense;","import React from 'react';\r\nimport Expense from './Expense';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst List = ({expenses}) => ( \r\n    <div className=\"expenses-incurred\">\r\n        <div className=\"expenses-list\">\r\n            {\r\n                expenses.map(expense => (\r\n                    <Expense key={expense.id} \r\n                            expense={expense} \r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    </div>\r\n);\r\n \r\nList.propTypes = {\r\n    expenses: PropTypes.array.isRequired,\r\n} \r\n\r\nexport default List;","import React from 'react';\r\n\r\nconst Footer = () => (\r\n   <footer>\r\n       Designed & Adapted by&nbsp;\r\n       <a rel=\"noreferrer\" href=\"https://gericyber.github.io/\" target=\"_blank\">\r\n           gericyber\r\n      </a>\r\n   </footer>\r\n);\r\n \r\nexport default Footer;","import React, {useState, useEffect, Fragment} from 'react';\nimport BudgetControl from './components/BudgetControl.jsx';\nimport BudgetForm from './components/BudgetForm.jsx'\nimport Form from './components/Form.jsx';\nimport List from './components/List.jsx';\nimport Footer from './components/Footer.jsx';\n\nfunction App() {\n\n  // Set State\n  const [budget, setBudget] = useState(0);\n  const [residuary, saveResiduary] = useState(0);\n  const [displayBudgetForm, updateBudgetForm] = useState(true);\n  const [expenses, setExpenses] = useState([]);\n  const [expense, setExpense] = useState({});\n  const [createExpense, saveCreateExpense] = useState(false)\n\n  // useEffect that updates residuary\n  useEffect(() => {\n    if (createExpense) {\n\n      // Add new budget\n      setExpenses([\n        ...expenses,\n        expense\n      ]);\n\n      // Subtract of the current budget\n      const budgetResiduary = residuary - expense.quantity;\n      saveResiduary(budgetResiduary);\n\n      saveCreateExpense(false);\n    }\n  }, [expense])\n\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <header >\n          <h1 className=\"semi-strong\">Money Management</h1>\n          <div className=\"content content-principal\">\n            {\n              displayBudgetForm ?\n              (\n                <BudgetForm\n                setBudget={setBudget}\n                saveResiduary={saveResiduary}\n                updateBudgetForm={updateBudgetForm}\n                />\n              )\n              :\n              (\n                <div className=\"row flex-full\">\n                  <div className=\"one-half column\">\n                    <Form setExpense={setExpense}\n                          saveCreateExpense={saveCreateExpense}\n                    />\n                  </div>\n                  <div className=\"one-half column\">\n                    {\n                      expenses.length === 0 ? \n                      <h2 className=\"semi-strong\">\n                          No expenses yet\n                      </h2>\n                      :\n                      <h2 className=\"semi-strong\">\n                          Expenses List\n                      </h2>\n                    }\n                    <List expenses={expenses} />\n                    <BudgetControl budget={budget}\n                                  residuary={residuary}\n                    />\n                  </div>\n\n                </div>\n              )\n            }\n          </div>\n        </header>\n      </div>\n      <Footer />\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}